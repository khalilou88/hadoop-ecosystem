services:
  namenode:
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    image: apache/hadoop:3
    hostname: namenode
    container_name: namenode
    command: ["hdfs", "namenode"]
    ports:
      - "9870:9870" # HDFS Web UI
      - "9000:9000" # HDFS default port
    env_file:
      - ./hadoop.env
    environment:
      - CLUSTER_NAME=test-cluster
      - ENSURE_NAMENODE_DIR=/tmp/hadoop-root/dfs/name
    volumes:
      - namenode_data:/tmp/hadoop-root/dfs/name
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9870"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - hadoop-net

  datanode:
    image: apache/hadoop:3
    hostname: datanode
    container_name: datanode
    command: ["hdfs", "datanode"]
    depends_on:
      namenode:
        condition: service_healthy
    env_file:
      - ./hadoop.env
    environment:
      - CLUSTER_NAME=test-cluster
      - ENSURE_DATANODE_DIR=/tmp/hadoop-root/dfs/data
    volumes:
      - datanode_data:/tmp/hadoop-root/dfs/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9864"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - hadoop-net

  resourcemanager:
    image: apache/hadoop:3
    hostname: resourcemanager
    container_name: resourcemanager
    command: ["yarn", "resourcemanager"]
    depends_on:
      namenode:
        condition: service_healthy
    ports:
      - "8088:8088" # YARN Web UI
    env_file:
      - ./hadoop.env
    environment:
      - CLUSTER_NAME=test-cluster
    volumes:
      - ./test.sh:/opt/test.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/ws/v1/cluster/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - hadoop-net

  nodemanager:
    image: apache/hadoop:3
    hostname: nodemanager
    container_name: nodemanager
    command: ["yarn", "nodemanager"]
    depends_on:
      namenode:
        condition: service_healthy
      resourcemanager:
        condition: service_healthy
    env_file:
      - ./hadoop.env
    environment:
      - CLUSTER_NAME=test-cluster
    healthcheck:
      test: ["CMD", "yarn", "node", "-list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - hadoop-net

  historyserver:
    image: apache/hadoop:3
    hostname: historyserver
    container_name: historyserver
    command: ["mapred", "historyserver"]
    depends_on:
      namenode:
        condition: service_healthy
      resourcemanager:
        condition: service_healthy
    ports:
      - "8188:8188" # MapReduce JobHistory Web UI
    env_file:
      - ./hadoop.env
    environment:
      - CLUSTER_NAME=test-cluster
    volumes:
      - hadoop_history:/tmp/hadoop-yarn/staging/history
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8188"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - hadoop-net

volumes:
  namenode_data:
  datanode_data:
  hadoop_history:

networks:
  hadoop-net:
    driver: bridge